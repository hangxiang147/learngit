package com.zhizaolian.staff.action;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import com.zhizaolian.staff.service.PositionService;
import com.zhizaolian.staff.service.WorkReportService;
import com.zhizaolian.staff.utils.DateUtil;
import com.zhizaolian.staff.utils.ListResult;
import com.zhizaolian.staff.vo.CompanyVO;
import com.zhizaolian.staff.vo.DepartmentVO;
import com.zhizaolian.staff.vo.WorkReportDetailVO;
import com.zhizaolian.staff.vo.WorkReportVO;

import lombok.Getter;
import lombok.Setter;

public class WorkReportAction extends BaseAction {

	private static final long serialVersionUID = 1L;
	@Getter
	@Setter 
	private String selectedPanel;
	@Setter
	@Getter
	private WorkReportDetailVO workReportDetailVO;
	@Setter
	@Getter
	private String searchDate;
	@Setter
	@Getter
	private List<WorkReportVO> reportStatistics;
	@Setter
	@Getter
	private Integer page = 1;
	@Setter
	@Getter
	private Integer limit = 20;
	@Getter
	@Setter
	private Integer flag;
	@Getter
	private Integer totalPage;
	@Autowired
	private WorkReportService workReportService;
	@Getter
	private String errorMessage;
	@Autowired
	private PositionService positionService;
	
	public String findWorkReportList() {
		if(workReportDetailVO==null){
			workReportDetailVO=new WorkReportDetailVO();						
		}
		try{
			ListResult<WorkReportDetailVO> workReportDetailVOListResult=workReportService.findWorkReportListByUserID(workReportDetailVO,page,limit);
			request.setAttribute("workReportDetailVOs", workReportDetailVOListResult.getList());
			int count=workReportDetailVOListResult.getTotalCount();
			totalPage = count%limit==0 ? count/limit : count/limit+1;
			List<CompanyVO> companyVOs = positionService.findAllCompanys();
			if (workReportDetailVO != null && workReportDetailVO.getCompanyID() != null) {
				List<DepartmentVO> departmentVOs = positionService.findDepartmentsByCompanyID(workReportDetailVO.getCompanyID());
				if (departmentVOs != null && workReportDetailVO.getDepartmentID() != null) {
					List<Integer> selectedDepartmentIDs = new ArrayList<Integer>();
					int selectedDepartmentID = workReportDetailVO.getDepartmentID();
					while (selectedDepartmentID != 0) {
						selectedDepartmentIDs.add(0, selectedDepartmentID);
						for (DepartmentVO departmentVO : departmentVOs) {
							if (departmentVO.getDepartmentID() == selectedDepartmentID) {
								selectedDepartmentID = departmentVO.getParentID();
							}						}
					}
					request.setAttribute("selectedDepartmentIDs", selectedDepartmentIDs);
				}
				request.setAttribute("departmentVOs", departmentVOs);
			}
			request.setAttribute("companyVOs", companyVOs);
		}catch(Exception e){
			errorMessage = "查询工作列表失败："+e.getMessage();
			e.printStackTrace();
			return "error";
			
		}
			
		selectedPanel = "workReportList";
		return "workReportList";
	}
	public String findWorkReportStatistics(){
		try{
			
			Integer companyID = Integer.parseInt(request.getParameter("companyID"));
			List<WorkReportVO> workReportVOs=workReportService.findWorkReportsByDate(companyID,searchDate);
			List<CompanyVO> companyVOs = positionService.findAllCompanys();
			request.setAttribute("workReportVOs", workReportVOs);
			request.setAttribute("count", workReportVOs.size());
			request.setAttribute("companyVOs", companyVOs);
		}catch(Exception e){
			errorMessage = "查询未汇报失败："+e.getMessage();
			e.printStackTrace();
			return "error";
			
		}
		selectedPanel = "workReportStatistics";
		return "workReportStatistics";
	}
	public String findReportStatistics(){
		try{
			Integer companyID = Integer.parseInt(request.getParameter("companyID"));
			String searchMonth =request.getParameter("searchMonth");
			reportStatistics=workReportService.findStatisticsByMonth(companyID, DateUtil.getSimpleDate(searchMonth+"-01"));
		}catch(Exception e){
			errorMessage = "查询失败："+e.getMessage();
			
		}
		return "reportStatistics";
	}
	
}

