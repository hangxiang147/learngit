package com.zhizaolian.staff.action.informationCenter;

import lombok.Getter;
import lombok.Setter;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.zhizaolian.staff.action.BaseAction;
import com.zhizaolian.staff.service.PositionService;
import com.zhizaolian.staff.vo.DepartmentVO;

public class StructureAction extends BaseAction {
	
	@Getter
	@Setter
	private String selectedPanel;
	@Autowired
	private PositionService positionService;
	
	private static final long serialVersionUID = 1L;
	
	public String getStructureByCompanyID() {
		 String companyID = request.getParameter("companyID");
		 List<DepartmentVO> departmentVOs = positionService.findDepartmentsByCompanyIDDepartmentID(Integer.parseInt(companyID),0);
		 request.setAttribute("departments", departmentVOs);
		 request.setAttribute("companyID", companyID);
		 selectedPanel = companyID;
		 return "getStructureByCompanyID";
	}
	/**
	 * 获取所有上级部门父节点
	 */
	public void getAllParentDepIds(){
		String depId = request.getParameter("deptId");
		List<String> allParentDepIds = positionService.getAllParentDepIds(depId);
		Map<String, Object> resultMap = new HashMap<>();
		resultMap.put("allParentDepIds", allParentDepIds);
		printByJson(resultMap);
	}
	public void modifyNode(){
		String type = request.getParameter("type");
		String id = request.getParameter("id");
		String name = request.getParameter("name");
		positionService.updateName(type, id, name);
		returnSuccess();
	}
	public void deleteNode(){
		Map<String, String> resultMap = new HashMap<>();
		String type = request.getParameter("type");
		String id = request.getParameter("id");
		String companyId = request.getParameter("companyId");
		//确保部门或者职位下面没有任何人，否则无法删除
		if(!positionService.checkHasPerson(type, id, companyId)){
			positionService.deleteDepOrPos(type, id);
			resultMap.put("canDelete", "true");
		}else{
			resultMap.put("canDelete", "false");
		}
		printByJson(resultMap);
	}
}
